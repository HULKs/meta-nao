diff --git a/dynamic-layers/meta-python/recipes-opencv/dldt/openvino-model-optimizer_2024.0.0.bb b/dynamic-layers/meta-python/recipes-opencv/dldt/openvino-model-optimizer_2023.3.0.bb
similarity index 92%
rename from dynamic-layers/meta-python/recipes-opencv/dldt/openvino-model-optimizer_2024.0.0.bb
rename to dynamic-layers/meta-python/recipes-opencv/dldt/openvino-model-optimizer_2023.3.0.bb
index 70177c28..51237d32 100644
--- a/dynamic-layers/meta-python/recipes-opencv/dldt/openvino-model-optimizer_2024.0.0.bb
+++ b/dynamic-layers/meta-python/recipes-opencv/dldt/openvino-model-optimizer_2023.3.0.bb
@@ -5,9 +5,9 @@ environment, performs static model analysis, and adjusts deep \
 learning models for optimal execution on end-point target devices."
 HOMEPAGE = "https://01.org/openvinotoolkit"
 
-SRC_URI = "git://github.com/openvinotoolkit/openvino.git;protocol=https;branch=releases/2024/0;lfs=0 \
+SRC_URI = "git://github.com/openvinotoolkit/openvino.git;protocol=https;branch=releases/2023/3;lfs=0 \
            "
-SRCREV = "34caeefd07800b59065345d651949efbe8ab6649"
+SRCREV = "ceeafaf64f346c6f14a67c612e131da5c27ef620"
 
 LICENSE = "Apache-2.0"
 LIC_FILES_CHKSUM = "file://LICENSE;md5=86d3f3a95c324c9479bd8986968f4327"
diff --git a/dynamic-layers/openembedded-layer/recipes-support/opencv/files/0001-CPU-Solving-the-build-failure-caused-by-setting-the-.patch b/dynamic-layers/openembedded-layer/recipes-support/opencv/files/0001-CPU-Solving-the-build-failure-caused-by-setting-the-.patch
deleted file mode 100644
index d1851406..00000000
--- a/dynamic-layers/openembedded-layer/recipes-support/opencv/files/0001-CPU-Solving-the-build-failure-caused-by-setting-the-.patch
+++ /dev/null
@@ -1,43 +0,0 @@
-From b8c3bae71e6d3417ade5cb537cb1785fd75a75c8 Mon Sep 17 00:00:00 2001
-From: Razvan Apetroaie <117895604+razvanapetroaie@users.noreply.github.com>
-Date: Tue, 20 Feb 2024 02:28:14 +0200
-Subject: [PATCH] [CPU] Solving the build failure caused by setting the
- "ENABLE_OV_ONNX_FRONTEND" option to "OFF" (#22934)
-
-### Details:
-See the [ticket
-description](https://jira.devtools.intel.com/browse/CVS-132119). The
-solution was checked only on a local setup on Ubuntu, if there's a way
-to check that using the CI please let me know (or if you could run the
-job and paste the link in the comments I would be grateful).
-
-Disclaimer: I'm not a CPU plugin developer, so I can't tell for sure if
-this is the ideal fix and no side effects are introduced. Please take
-that into account when reviewing/merging.
-
-### Tickets:
- - [CVS-132119](https://jira.devtools.intel.com/browse/CVS-132119)
-
-Upstream-Status: Backport [https://github.com/openvinotoolkit/openvino/commit/b8c3bae71e6d3417ade5cb537cb1785fd75a75c8]
-
-Signed-off-by: Yogesh Tyagi <yogesh.tyagi@intel.com>
----
- src/plugins/intel_cpu/tests/functional/CMakeLists.txt | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-diff --git a/src/plugins/intel_cpu/tests/functional/CMakeLists.txt b/src/plugins/intel_cpu/tests/functional/CMakeLists.txt
-index db5ae8d01c..6941cb528d 100644
---- a/src/plugins/intel_cpu/tests/functional/CMakeLists.txt
-+++ b/src/plugins/intel_cpu/tests/functional/CMakeLists.txt
-@@ -16,7 +16,7 @@ set(LINK_LIBRARIES funcSharedTests cpuSpecificRtInfo openvino::snippets ov_snipp
- if(ENABLE_OV_ONNX_FRONTEND)
-     list(APPEND DEFINES TEST_MODELS="${TEST_MODEL_ZOO}")
- else()
--    set(EXCLUDED_SOURCE_PATHS ${CMAKE_CURRENT_SOURCE_DIR}/extension ${CMAKE_CURRENT_SOURCE_DIR}/shared_tests_instances/onnx)
-+    set(EXCLUDED_SOURCE_PATHS ${CMAKE_CURRENT_SOURCE_DIR}/custom/extension ${CMAKE_CURRENT_SOURCE_DIR}/shared_tests_instances/onnx)
- endif()
- 
- if(NOT (ARM OR AARCH64))
--- 
-2.34.1
-
diff --git a/dynamic-layers/openembedded-layer/recipes-support/opencv/files/0001-cmake-fix-build-when-using-sysroot.patch b/dynamic-layers/openembedded-layer/recipes-support/opencv/files/0001-cmake-fix-build-when-using-sysroot.patch
deleted file mode 100644
index d251f21b..00000000
--- a/dynamic-layers/openembedded-layer/recipes-support/opencv/files/0001-cmake-fix-build-when-using-sysroot.patch
+++ /dev/null
@@ -1,32 +0,0 @@
-From b5dfcf8bc1245e804c847745c237068eb6f19931 Mon Sep 17 00:00:00 2001
-From: Yogesh Tyagi <yogesh.tyagi@intel.com>
-Date: Fri, 15 Mar 2024 16:28:41 +0800
-Subject: [PATCH] cmake: fix build when using sysroot
-
-When cross-compiling against a sysroot, system headers will not be at a place
-that starts with /usr. Update conditional check to exclude directories
-which have "/usr/include" in them to not add <sysroot>/usr/include as well.
-
-Upstream-Status: Submitted [https://github.com/openvinotoolkit/openvino/pull/23486]
-
-Signed-off-by: Yogesh Tyagi <yogesh.tyagi@intel.com>
----
- src/cmake/ov_parallel.cmake | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-diff --git a/src/cmake/ov_parallel.cmake b/src/cmake/ov_parallel.cmake
-index 3793db98e30..819d3410531 100644
---- a/src/cmake/ov_parallel.cmake
-+++ b/src/cmake/ov_parallel.cmake
-@@ -296,7 +296,7 @@ function(ov_set_threading_interface_for TARGET_NAME)
-                 if(include_directories)
-                     foreach(include_directory IN LISTS include_directories)
-                         # cannot include /usr/include headers as SYSTEM
--                        if(NOT "${include_directory}" MATCHES "^/usr.*$")
-+                        if(NOT "${include_directory}" MATCHES ".*/usr/include.*$")
-                             target_include_directories(${TARGET_NAME} SYSTEM
-                                 ${LINK_TYPE} $<BUILD_INTERFACE:${include_directory}>)
-                         else()
--- 
-2.34.1
-
diff --git a/dynamic-layers/openembedded-layer/recipes-support/opencv/files/0002-Change-the-working-directory-to-source-to-workaround.patch b/dynamic-layers/openembedded-layer/recipes-support/opencv/files/0002-Change-the-working-directory-to-source-to-workaround.patch
new file mode 100644
index 00000000..e6fe3271
--- /dev/null
+++ b/dynamic-layers/openembedded-layer/recipes-support/opencv/files/0002-Change-the-working-directory-to-source-to-workaround.patch
@@ -0,0 +1,29 @@
+From a0ea332df477480f90d9dc841faf71f4b5be892e Mon Sep 17 00:00:00 2001
+From: Anuj Mittal <anuj.mittal@intel.com>
+Date: Wed, 29 Nov 2023 12:45:59 +0530
+Subject: [PATCH 2/4] Change the working directory to source to workaround
+ cython embedding absolute path to the pyx file in output.
+
+Upstream-Status: Inappropriate [OE build specific]
+
+Signed-off-by: Anuj Mittal <anuj.mittal@intel.com>
+---
+ .../python/src/compatibility/openvino/cmake/UseCython.cmake     | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/src/bindings/python/src/compatibility/openvino/cmake/UseCython.cmake b/src/bindings/python/src/compatibility/openvino/cmake/UseCython.cmake
+index 03a208f03c2..be9af591b34 100644
+--- a/src/bindings/python/src/compatibility/openvino/cmake/UseCython.cmake
++++ b/src/bindings/python/src/compatibility/openvino/cmake/UseCython.cmake
+@@ -258,7 +258,7 @@ function( compile_pyx _name generated_file )
+   add_custom_command( OUTPUT ${_generated_file}
+     COMMAND ${CYTHON_EXECUTABLE}
+     ARGS ${cxx_arg} ${include_directory_arg} ${version_arg}
+-    ${annotate_arg} ${no_docstrings_arg} ${cython_debug_arg} ${CYTHON_FLAGS}
++    ${annotate_arg} ${no_docstrings_arg} ${cython_debug_arg} ${CYTHON_FLAGS} -w ${CMAKE_CURRENT_SOURCE_DIR}
+     --output-file  ${_generated_file} ${pyx_locations}
+     DEPENDS ${pyx_locations} ${pxd_dependencies} ${pxi_dependencies}
+     IMPLICIT_DEPENDS ${pyx_lang} ${c_header_dependencies}
+--
+2.34.1
+
diff --git a/dynamic-layers/openembedded-layer/recipes-support/opencv/open-model-zoo_2024.0.0.bb b/dynamic-layers/openembedded-layer/recipes-support/opencv/open-model-zoo_2023.3.0.bb
similarity index 97%
rename from dynamic-layers/openembedded-layer/recipes-support/opencv/open-model-zoo_2024.0.0.bb
rename to dynamic-layers/openembedded-layer/recipes-support/opencv/open-model-zoo_2023.3.0.bb
index 495a4786..7e741d24 100644
--- a/dynamic-layers/openembedded-layer/recipes-support/opencv/open-model-zoo_2024.0.0.bb
+++ b/dynamic-layers/openembedded-layer/recipes-support/opencv/open-model-zoo_2023.3.0.bb
@@ -8,7 +8,7 @@ SRC_URI = "git://github.com/opencv/open_model_zoo.git;protocol=https;branch=mast
            file://0001-use-oe-gflags.patch \
            "
 
-SRCREV = "37f60eb7fe1dcdedc552b2fb184d646723ed5e80"
+SRCREV = "e8fb4cd86a516ce5765290e9665f8afe87b79b2e"
 
 LICENSE = "Apache-2.0"
 LIC_FILES_CHKSUM = "file://LICENSE;md5=86d3f3a95c324c9479bd8986968f4327 \
diff --git a/dynamic-layers/openembedded-layer/recipes-support/opencv/openvino-inference-engine_2024.0.0.bb b/dynamic-layers/openembedded-layer/recipes-support/opencv/openvino-inference-engine_2023.3.0.bb
similarity index 88%
rename from dynamic-layers/openembedded-layer/recipes-support/opencv/openvino-inference-engine_2024.0.0.bb
rename to dynamic-layers/openembedded-layer/recipes-support/opencv/openvino-inference-engine_2023.3.0.bb
index 94edd1b8..e465ab3e 100644
--- a/dynamic-layers/openembedded-layer/recipes-support/opencv/openvino-inference-engine_2024.0.0.bb
+++ b/dynamic-layers/openembedded-layer/recipes-support/opencv/openvino-inference-engine_2023.3.0.bb
@@ -4,7 +4,7 @@ DESCRIPTION = "This toolkit allows developers to deploy pre-trained \
 deep learning models through a high-level C++ Inference Engine API \
 integrated with application logic."
 
-SRC_URI = "git://github.com/openvinotoolkit/openvino.git;protocol=https;name=openvino;branch=releases/2024/0;lfs=0 \
+SRC_URI = "git://github.com/openvinotoolkit/openvino.git;protocol=https;name=openvino;branch=releases/2023/3;lfs=0 \
            git://github.com/openvinotoolkit/oneDNN.git;protocol=https;destsuffix=git/src/plugins/intel_cpu/thirdparty/onednn;name=mkl;nobranch=1 \
            git://github.com/oneapi-src/oneDNN.git;protocol=https;destsuffix=git/src/plugins/intel_gpu/thirdparty/onednn_gpu;name=onednn;nobranch=1 \
            git://github.com/herumi/xbyak.git;protocol=https;destsuffix=git/thirdparty/xbyak;name=xbyak;branch=master \
@@ -13,29 +13,26 @@ SRC_URI = "git://github.com/openvinotoolkit/openvino.git;protocol=https;name=ope
            git://github.com/protocolbuffers/protobuf.git;protocol=https;destsuffix=git/thirdparty/protobuf/protobuf;name=protobuf;branch=3.20.x \
            git://github.com/gflags/gflags.git;protocol=https;destsuffix=git/thirdparty/gflags/gflags;name=gflags;nobranch=1 \
            git://github.com/madler/zlib.git;protocol=https;destsuffix=git/thirdparty/zlib/zlib;name=zlib;nobranch=1 \
-           git://github.com/openvinotoolkit/mlas.git;protocol=https;destsuffix=git/src/plugins/intel_cpu/thirdparty/mlas;name=mlas;nobranch=1 \
            git://github.com/nodejs/node-api-headers.git;protocol=https;destsuffix=git/node-api-headers-src;name=node-api-headers;nobranch=1 \
            git://github.com/nodejs/node-addon-api.git;protocol=https;destsuffix=git/node-addon-api-src;name=node-addon-api;nobranch=1 \
            file://0001-cmake-yocto-specific-tweaks-to-the-build-process.patch \
+           file://0002-Change-the-working-directory-to-source-to-workaround.patch \
            file://0003-cmake-Fix-overloaded-virtual-error.patch \
            file://0004-protobuf-allow-target-protoc-to-be-built.patch \
-           file://0001-cmake-fix-build-when-using-sysroot.patch \
-           file://0001-CPU-Solving-the-build-failure-caused-by-setting-the-.patch \
            "
 
-SRCREV_openvino = "34caeefd07800b59065345d651949efbe8ab6649"
-SRCREV_mkl = "f82148befdbdc9576ec721c9d500155ee4de8060"
-SRCREV_onednn = "494af5f9921bdae98f1a0e2955fa7d76ff386c4f"
+SRCREV_openvino = "ceeafaf64f346c6f14a67c612e131da5c27ef620"
+SRCREV_mkl = "cb3060bbf4694e46a1359a3d4dfe70500818f72d"
+SRCREV_onednn = "cb77937ffcf5e83b5d1cf2940c94e8b508d8f7b4"
 SRCREV_xbyak = "740dff2e866f3ae1a70dd42d6e8836847ed95cc2"
 SRCREV_json = "9cca280a4d0ccf0c08f47a99aa71d1b0e52f8d03"
 SRCREV_ade = "0e8a2ccdd34f29dba55894f5f3c5179809888b9e"
 SRCREV_protobuf = "fe271ab76f2ad2b2b28c10443865d2af21e27e0e"
 SRCREV_gflags = "e171aa2d15ed9eb17054558e0b3a6a413bb01067"
-SRCREV_zlib = "09155eaa2f9270dc4ed1fa13e2b4b2613e6e4851"
-SRCREV_mlas = "d1bc25ec4660cddd87804fcf03b2411b5dfb2e94"
+SRCREV_zlib = "04f42ceca40f73e2978b50e93806c2a18c1281fc"
 SRCREV_node-api-headers = "186e04b5e40e54d7fd1655bc67081cc483f12488"
 SRCREV_node-addon-api = "39a25bf27788ff7a7ea5c64978c4dcd1e7b9d80d"
-SRCREV_FORMAT = "openvino_mkl_onednn_xbyak_json_ade_protobuf_gflags_zlib_node-api-headers_node-addon-api_mlas"
+SRCREV_FORMAT = "openvino_mkl_onednn_xbyak_json_ade_protobuf_gflags_zlib_node-api-headers_node-addon-api"
 
 LICENSE = "Apache-2.0 & MIT & BSD-3-Clause & Zlib"
 LIC_FILES_CHKSUM = "file://LICENSE;md5=86d3f3a95c324c9479bd8986968f4327 \
@@ -45,7 +42,6 @@ LIC_FILES_CHKSUM = "file://LICENSE;md5=86d3f3a95c324c9479bd8986968f4327 \
                     file://thirdparty/ade/LICENSE;md5=3b83ef96387f14655fc854ddc3c6bd57 \
                     file://thirdparty/gflags/gflags/COPYING.txt;md5=c80d1a3b623f72bb85a4c75b556551df \
                     file://thirdparty/zlib/zlib/LICENSE;md5=b51a40671bc46e961c0498897742c0b8 \
-                    file://src/plugins/intel_cpu/thirdparty/mlas/LICENSE;md5=86d3f3a95c324c9479bd8986968f4327 \
                     file://src/plugins/intel_cpu/thirdparty/onednn/LICENSE;md5=3b64000f6e7d52516017622a37a94ce9 \
                     file://src/plugins/intel_gpu/thirdparty/onednn_gpu/LICENSE;md5=3b64000f6e7d52516017622a37a94ce9 \
                     file://node-api-headers-src/LICENSE;md5=6adb2909701d4605b4b2ae1a9b25d8bd \
@@ -73,6 +69,7 @@ EXTRA_OECMAKE += " \
                   -DCPACK_GENERATOR=RPM \
                   -DENABLE_SYSTEM_FLATBUFFERS=ON \
                   -DENABLE_SYSTEM_SNAPPY=ON \
+                  -DENABLE_MLAS_FOR_CPU=OFF \
                   -DFETCHCONTENT_BASE_DIR="${S}" \
                   "
 
@@ -91,7 +88,7 @@ COMPATIBLE_HOST:libc-musl = "null"
 
 PACKAGECONFIG ?= "opencl samples"
 PACKAGECONFIG[opencl] = "-DENABLE_INTEL_GPU=TRUE, -DENABLE_INTEL_GPU=FALSE, virtual/opencl-icd opencl-headers opencl-clhpp,"
-PACKAGECONFIG[python3] = "-DENABLE_PYTHON=ON -DPYTHON_LIBRARY=${PYTHON_LIBRARY} -DPYTHON_INCLUDE_DIR=${PYTHON_INCLUDE_DIR} -DENABLE_PYTHON_PACKAGING=ON, -DENABLE_PYTHON=OFF, patchelf-native, python3 python3-numpy python3-progress"
+PACKAGECONFIG[python3] = "-DENABLE_PYTHON=ON -DPYTHON_LIBRARY=${PYTHON_LIBRARY} -DPYTHON_INCLUDE_DIR=${PYTHON_INCLUDE_DIR} -DENABLE_PYTHON_PACKAGING=ON, -DENABLE_PYTHON=OFF, python3-cython-native patchelf-native, python3 python3-numpy python3-progress python3-cython"
 PACKAGECONFIG[samples] = "-DENABLE_SAMPLES=ON -DENABLE_COMPILE_TOOL=ON, -DENABLE_SAMPLES=OFF -DENABLE_COMPILE_TOOL=OFF, opencv"
 PACKAGECONFIG[verbose] = "-DVERBOSE_BUILD=1,-DVERBOSE_BUILD=0"
 
